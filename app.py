from flask import Flask, request, jsonify, send_from_directory, render_template_string
from flask_mysqldb import MySQL

app = Flask(__name__)

# Database configuration
app.config['MYSQL_HOST'] = 'localhost'
app.config['MYSQL_USER'] = 'root'
app.config['MYSQL_PASSWORD'] = '1234'
app.config['MYSQL_DB'] = 'cve'
app.config['MYSQL_CURSORCLASS'] = 'DictCursor'

mysql = MySQL(app)

@app.route('/docs')
def docs():
    return render_template_string('''
        <!DOCTYPE html>
        <html>
        <head>
            <title>API Documentation</title>
            <link href="https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700" rel="stylesheet">
            <style> body { margin: 0; padding: 0; } </style>
        </head>
        <body>
            <redoc spec-url='/static/swagger.yaml'></redoc>
            <script src="https://cdn.jsdelivr.net/npm/redoc/bundles/redoc.standalone.js"> </script>
        </body>
        </html>
    ''')

@app.route('/static/<path:path>')
def send_static(path):
    return send_from_directory('static', path)

@app.route('/')
def index():
    return "Welcome to the CVE Test API"

@app.route('/cve/<cve_id>', methods=['GET'])
def get_cve_by_id(cve_id):
    cur = mysql.connection.cursor()
    cur.execute("SELECT * FROM CVE WHERE CVE_ID = %s", (cve_id,))
    result = cur.fetchone()
    cur.close()
    if result:
        return jsonify(result)
    else:
        return jsonify({"error": "CVE not found"}), 404

@app.route('/cve/severity', methods=['GET'])
def get_cves_by_severity():
    cur = mysql.connection.cursor()
    cur.execute("SELECT Severity, COUNT(*) as Count FROM CVE GROUP BY Severity")
    results = cur.fetchall()
    cur.close()
    return jsonify(results)

@app.route('/cve/top-impact', methods=['GET'])
def get_top_impact_cves():
    cur = mysql.connection.cursor()
    cur.execute("SELECT CVE_ID, ImpactScore FROM CVSSMetrics ORDER BY ImpactScore DESC LIMIT 10")
    results = cur.fetchall()
    cur.close()
    return jsonify(results)

@app.route('/cve/top-exploitability', methods=['GET'])
def get_top_exploitability_cves():
    cur = mysql.connection.cursor()
    cur.execute("SELECT CVE_ID, ExploitabilityScore FROM CVSSMetrics ORDER BY ExploitabilityScore DESC LIMIT 10")
    results = cur.fetchall()
    cur.close()
    return jsonify(results)

@app.route('/cve/worst-products', methods=['GET'])
def get_worst_products():
    cur = mysql.connection.cursor()
    cur.execute("SELECT Product.Name, COUNT(*) as Count FROM Product JOIN Vulnerability_Product ON Product.Product_ID = Vulnerability_Product.Product_ID GROUP BY Product.Name ORDER BY Count DESC")
    results = cur.fetchall()
    cur.close()
    return jsonify(results)

@app.route('/cve/worst-platforms', methods=['GET'])
def get_worst_platforms():
    cur = mysql.connection.cursor()
    cur.execute("SELECT Platform.Name, COUNT(*) as Count FROM Platform JOIN Vulnerability_Platform ON Platform.Platform_ID = Vulnerability_Platform.Platform_ID GROUP BY Platform.Name ORDER BY Count DESC")
    results = cur.fetchall()
    cur.close()
    return jsonify(results)

if __name__ == '__main__':
    app.run(debug=True)
